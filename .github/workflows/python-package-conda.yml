name: Build and Deploy Installer

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10.11"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1 libopengl0 libxcb-cursor0 libxkbcommon-x11-0
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install numpy pandas matplotlib PyQt6

      - name: Run unit tests
        run: |
          export QT_QPA_PLATFORM=offscreen
          python -m unittest discover -s tests -p "*.py"

  build:
    runs-on: windows-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller numpy pandas matplotlib PyQt6
      
      - name: Make build script executable
        shell: cmd
        run: icacls build.sh /grant Everyone:RX
    
      - name: Build Executable with PyInstaller
        shell: bash
        run: ./build.sh

      - name: Verify executable exists
        shell: pwsh
        run: |
          if (-not (Test-Path "dist\RobotTestRunner.exe")) {
              Write-Error "Executable not found at dist\RobotTestRunner.exe"
              Get-ChildItem -Path dist | Write-Output
              exit 1
          }

      - name: Install Inno Setup
        run: choco install -y innosetup --force

      - name: Extract version from XML
        id: version
        shell: pwsh
        run: |
          [xml]$xml = Get-Content -Path "config.xml"
          $version = $xml.data.version.Trim()
          Write-Output "Extracted version: $version"
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Build Installer using Inno Setup
        shell: cmd
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "/DMyAppVersion=${{ steps.version.outputs.VERSION }}" "Setup.iss"

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer
          path: output/*.exe

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
  
      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: installer
          path: dist/
          
      - name: Extract version from XML
        id: version
        run: |
          sudo apt-get update && sudo apt-get install -y xmlstarlet
          VERSION=$(xmlstarlet sel -t -v "//version" config.xml | tr -d '[:space:]')
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
  
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            New release of Robot Test Runner including:
            - All required dependencies
            - Automatic VC++ Redistributable installation
            - Embedded Python environment
          draft: false
          prerelease: false
          files: dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}